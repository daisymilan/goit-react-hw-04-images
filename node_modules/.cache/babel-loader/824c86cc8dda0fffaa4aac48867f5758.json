{"ast":null,"code":"var _jsxFileName = \"/Users/daisymilan/Desktop/repo/React Projects/goit-react-hw-04-images/src/context/ImagesContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext, useMemo } from 'react';\nimport { getAPI } from 'pixabay-api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImagesContext = /*#__PURE__*/createContext();\nexport const useImages = () => {\n  _s();\n  return useContext(ImagesContext);\n};\n_s(useImages, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ImagesProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isEnd, setIsEnd] = useState(false);\n  useEffect(() => {\n    const fetchImages = async () => {\n      if (!searchQuery) return;\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        const response = await getAPI(searchQuery, currentPage);\n        const {\n          totalHits,\n          hits\n        } = response;\n        if (hits.length === 0) {\n          toast.error('Sorry, there are no images matching your search query. Please try again.');\n          setIsLoading(false);\n          return;\n        }\n        if (currentPage === 1) {\n          toast.success(`Hooray! We found ${totalHits} images!`);\n        }\n        setImages(prev => currentPage === 1 ? hits : [...prev, ...hits]);\n        setIsEnd(currentPage * 12 >= totalHits);\n      } catch (error) {\n        setIsError(true);\n        toast.error('Oops, something went wrong! Reload this page!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchImages();\n  }, [searchQuery, currentPage]);\n  const handleSearchSubmit = query => {\n    const normalizedQuery = query.trim().toLowerCase();\n    if (normalizedQuery === '') {\n      alert(`Empty string is not a valid search query. Please type again.`);\n      return;\n    }\n    if (normalizedQuery === searchQuery) {\n      alert(`Search query is the same as the previous one. Please provide a new search query.`);\n      return;\n    }\n    setSearchQuery(normalizedQuery);\n    setCurrentPage(1);\n    setImages([]);\n    setIsEnd(false);\n  };\n  const handleLoadMore = () => {\n    if (!isEnd) {\n      setCurrentPage(prev => prev + 1);\n    } else {\n      toast(\"We're sorry, but you've reached the end of search results.\", {\n        icon: '👏',\n        style: {\n          borderRadius: '10px',\n          background: '#333',\n          color: '#fff'\n        }\n      });\n    }\n  };\n  const uniqueTags = useMemo(() => {\n    console.log('Calculating unique tags...');\n    const tagSet = new Set();\n    images.forEach(image => {\n      image.tags.split(', ').forEach(tag => tagSet.add(tag));\n    });\n    console.log('Unique tags calculated:', Array.from(tagSet));\n    return Array.from(tagSet);\n  }, [images]);\n  return /*#__PURE__*/_jsxDEV(ImagesContext.Provider, {\n    value: {\n      images,\n      isLoading,\n      isError,\n      isEnd,\n      handleSearchSubmit,\n      handleLoadMore,\n      uniqueTags\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 7\n  }, this);\n};\n_s2(ImagesProvider, \"aeEzahNZVE6DHRnX3Ax78YybAiU=\");\n_c = ImagesProvider;\nvar _c;\n$RefreshReg$(_c, \"ImagesProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useMemo","getAPI","toast","jsxDEV","_jsxDEV","ImagesContext","useImages","_s","ImagesProvider","_ref","_s2","children","images","setImages","currentPage","setCurrentPage","searchQuery","setSearchQuery","isLoading","setIsLoading","isError","setIsError","isEnd","setIsEnd","fetchImages","response","totalHits","hits","length","error","success","prev","handleSearchSubmit","query","normalizedQuery","trim","toLowerCase","alert","handleLoadMore","icon","style","borderRadius","background","color","uniqueTags","console","log","tagSet","Set","forEach","image","tags","split","tag","add","Array","from","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/daisymilan/Desktop/repo/React Projects/goit-react-hw-04-images/src/context/ImagesContext.jsx"],"sourcesContent":["import React, {\n    createContext,\n    useState,\n    useEffect,\n    useContext,\n    useMemo,\n  } from 'react';\n  import { getAPI } from 'pixabay-api';\n  import toast from 'react-hot-toast';\n  \n  const ImagesContext = createContext();\n  \n  export const useImages = () => useContext(ImagesContext);\n  \n  export const ImagesProvider = ({ children }) => {\n    const [images, setImages] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const [isEnd, setIsEnd] = useState(false);\n  \n    useEffect(() => {\n      const fetchImages = async () => {\n        if (!searchQuery) return;\n  \n        setIsLoading(true);\n        setIsError(false);\n  \n        try {\n          const response = await getAPI(searchQuery, currentPage);\n          const { totalHits, hits } = response;\n  \n          if (hits.length === 0) {\n            toast.error(\n              'Sorry, there are no images matching your search query. Please try again.'\n            );\n            setIsLoading(false);\n            return;\n          }\n  \n          if (currentPage === 1) {\n            toast.success(`Hooray! We found ${totalHits} images!`);\n          }\n  \n          setImages(prev => (currentPage === 1 ? hits : [...prev, ...hits]));\n          setIsEnd(currentPage * 12 >= totalHits);\n        } catch (error) {\n          setIsError(true);\n          toast.error('Oops, something went wrong! Reload this page!');\n        } finally {\n          setIsLoading(false);\n        }\n      };\n  \n      fetchImages();\n    }, [searchQuery, currentPage]);\n  \n    const handleSearchSubmit = query => {\n      const normalizedQuery = query.trim().toLowerCase();\n  \n      if (normalizedQuery === '') {\n        alert(`Empty string is not a valid search query. Please type again.`);\n        return;\n      }\n  \n      if (normalizedQuery === searchQuery) {\n        alert(\n          `Search query is the same as the previous one. Please provide a new search query.`\n        );\n        return;\n      }\n  \n      setSearchQuery(normalizedQuery);\n      setCurrentPage(1);\n      setImages([]);\n      setIsEnd(false);\n    };\n  \n    const handleLoadMore = () => {\n      if (!isEnd) {\n        setCurrentPage(prev => prev + 1);\n      } else {\n        toast(\"We're sorry, but you've reached the end of search results.\", {\n          icon: '👏',\n          style: {\n            borderRadius: '10px',\n            background: '#333',\n            color: '#fff',\n          },\n        });\n      }\n    };\n  \n    const uniqueTags = useMemo(() => {\n      console.log('Calculating unique tags...');\n      const tagSet = new Set();\n      images.forEach(image => {\n        image.tags.split(', ').forEach(tag => tagSet.add(tag));\n      });\n      console.log('Unique tags calculated:', Array.from(tagSet));\n      return Array.from(tagSet);\n    }, [images]);\n  \n    return (\n      <ImagesContext.Provider\n        value={{\n          images,\n          isLoading,\n          isError,\n          isEnd,\n          handleSearchSubmit,\n          handleLoadMore,\n          uniqueTags, \n        }}\n      >\n        {children}\n      </ImagesContext.Provider>\n    );\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module"}